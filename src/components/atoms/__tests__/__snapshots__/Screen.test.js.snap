// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Screen Renders Screen 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "#F7F1E9",
          "height": "100%",
          "justifyContent": "center",
        },
      ],
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "paddingTop": 20,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    />
  </RCTSafeAreaView>
</View>
`;

exports[`Testing Screen Renders Screen with button in it 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "#F7F1E9",
          "height": "100%",
          "justifyContent": "center",
        },
      ],
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "paddingTop": 20,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <View
        accessible={true}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "red",
            "height": "100%",
            "opacity": 1,
            "width": "100%",
          }
        }
      />
    </View>
  </RCTSafeAreaView>
</View>
`;

exports[`Testing Screen Renders Screen with text in it 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Array [
        Object {
          "backgroundColor": "#F7F1E9",
          "height": "100%",
          "justifyContent": "center",
        },
      ],
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Array [
        Object {
          "flexBasis": 0,
          "flexGrow": 1,
          "flexShrink": 1,
          "paddingTop": 20,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "flexBasis": 0,
            "flexGrow": 1,
            "flexShrink": 1,
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "fontSize": 16,
            },
          ]
        }
      >
        Random Text!
      </Text>
    </View>
  </RCTSafeAreaView>
</View>
`;
